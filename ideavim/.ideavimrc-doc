" ============================================================================
" IDEAVIM CONFIG
" Save this as ~/.ideavimrc on Linux/Mac or ~/_ideavimrc on Windows
" INLINE COMMENTS NOT ALLOWED - THIS IS MANUAL FILE
" ============================================================================

" ============================================================================
" SECTION 1: Basic Vim Settings
" ============================================================================

" Show line numbers and make them relative
set number
set relativenumber

" Keep inifite lines visible above/below cursor when scrolling
set scrolloff=999

" Search settings
set ignorecase     " Ignore case when searching
set smartcase      " But be case-sensitive if search contains uppercase
set incsearch      " Show search results as you type
set hlsearch       " Highlight all search matches

" Use system clipboard (allows copy/paste between Vim and other apps)
set clipboard+=unnamed
set clipboard+=ideaput     " Better clipboard integration with IntelliJ

" Show current mode (INSERT, VISUAL, etc.) in status bar
set showmode

" Visual bell instead of annoying beep
set visualbell

" Make J (join lines) work smarter with IntelliJ
set ideajoin

" Keep Vim mode after refactoring
set idearefactormode=keep

" Sync Vim marks with IntelliJ bookmarks
set ideamarks

" ============================================================================
" SECTION 2: Leader Key
" ============================================================================

" Leader key is like a "prefix" for custom shortcuts
" Space is ergonomic because its easy to reach with thumbs
let mapleader = " "

" ============================================================================
" SECTION 3: Essential Plugins
" ============================================================================

" These add Vim features that work great with IntelliJ
set surround              " Change surrounding quotes/brackets with cs, ds, ys
set commentary            " Comment lines with gc
set highlightedyank       " Briefly highlight what you just yanked (copied)
set argtextobj            " Text objects for function arguments (cia, daa)
set textobj-entire        " Text objects for entire file (ae, ie)
set exchange              " Exchange text objects `cx{motion}`
set ReplaceWithRegister   " Replace text with register using `gr{motion}`
set matchit               " Enhanced % matching for if/else, tags, etc.
set vim-paragraph-motion  " Better { and } paragraph motion

" ============================================================================
" SECTION 4: Which-Key Settings
" ============================================================================

set which-key               " Shows available keybindings (adds delay though)
set notimeout               " Disable timeout for partial commands
set timeoutlen=2000         " Which-key popup delay (2s)

" LEADER KEY
let g:WhichKeyDesc_leader = "<leader> Leader key"

" WINDOWS & SPLITS - <leader>w
let g:WhichKeyDesc_windows = "<leader>w Windows & Splits"
let g:WhichKeyDesc_windows_split_vertical = "<leader>wv Split vertically"
let g:WhichKeyDesc_windows_split_horizontal = "<leader>ws Split horizontally"
let g:WhichKeyDesc_windows_unsplit = "<leader>wu Unsplit (close splits)"
let g:WhichKeyDesc_windows_maximize = "<leader>wm Maximize (hide all windows)"

" BUFFERS/TABS - <leader>b
let g:WhichKeyDesc_buffers = "<leader>b Buffers/Tabs"
let g:WhichKeyDesc_buffers_next = "<leader>bn Next tab"
let g:WhichKeyDesc_buffers_previous = "<leader>bp Previous tab"
let g:WhichKeyDesc_buffers_delete = "<leader>bd Close current tab"
let g:WhichKeyDesc_buffers_delete_all = "<leader>ba Close all other tabs"

" FIND/SEARCH - <leader>f
let g:WhichKeyDesc_find = "<leader>f Find/Search"
let g:WhichKeyDesc_find_files = "<leader>ff Find files"
let g:WhichKeyDesc_find_grep = "<leader>fg Find in files (grep)"
let g:WhichKeyDesc_find_buffers = "<leader>fb Find recent files (buffers)"
let g:WhichKeyDesc_find_symbols = "<leader>fs Find symbols (file structure)"
let g:WhichKeyDesc_find_all = "<leader>fa Search everywhere"

" EXPLORER - <leader>e
let g:WhichKeyDesc_explorer = "<leader>e Show in project explorer"

" CODE ACTIONS - <leader>c
let g:WhichKeyDesc_code = "<leader>c Code Actions"
let g:WhichKeyDesc_code_actions = "<leader>ca Show code actions (quick fix)"
let g:WhichKeyDesc_code_rename = "<leader>cr Rename symbol"
let g:WhichKeyDesc_code_format = "<leader>cf Format code"
let g:WhichKeyDesc_code_imports = "<leader>ci Optimize imports"
let g:WhichKeyDesc_code_generate = "<leader>cc Generate code"

" COMMENT - <leader>/
let g:WhichKeyDesc_comment = "<leader>/ Toggle comment"

" REFACTOR - <leader>r
let g:WhichKeyDesc_refactor = "<leader>r Refactor"
let g:WhichKeyDesc_refactor_menu = "<leader>rr Refactor menu (show all)"
let g:WhichKeyDesc_refactor_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactor_variable = "<leader>rv Extract variable"

" RUN/EXECUTE - <leader>x
let g:WhichKeyDesc_execute = "<leader>x Run/Execute"
let g:WhichKeyDesc_execute_run = "<leader>xx Run (repeat last)"
let g:WhichKeyDesc_execute_choose = "<leader>xr Choose run configuration"
let g:WhichKeyDesc_execute_stop = "<leader>xs Stop"
let g:WhichKeyDesc_execute_test = "<leader>xt Test/Run class"
let g:WhichKeyDesc_execute_test_method = "<leader>xm Test method"
let g:WhichKeyDesc_execute_test_failed = "<leader>xf Rerun failed tests"

" DEBUG - <leader>d
let g:WhichKeyDesc_debug = "<leader>d Debug"
let g:WhichKeyDesc_debug_debug = "<leader>dd Debug (start)"
let g:WhichKeyDesc_debug_breakpoint = "<leader>db Toggle breakpoint"
let g:WhichKeyDesc_debug_stop = "<leader>ds Stop debug"

" TERMINAL & VIEWS - <leader>t, <leader>v
let g:WhichKeyDesc_terminal = "<leader>t Open terminal"
let g:WhichKeyDesc_view = "<leader>v View Tool Windows"
let g:WhichKeyDesc_view_database = "<leader>vd View database"
let g:WhichKeyDesc_view_git = "<leader>vg View git panel"

" ZEN MODE - <leader>z
let g:WhichKeyDesc_zen = "<leader>z Toggle distraction-free mode"
let g:WhichKeyDesc_zen_full = "<leader>Z Toggle zen mode"

" INSERT LINES - <leader>i
let g:WhichKeyDesc_insert = "<leader>i Insert blank lines"
let g:WhichKeyDesc_insert_below = "<leader>ij Insert line below"
let g:WhichKeyDesc_insert_above = "<leader>ik Insert line above"

" MULTI-CURSOR - <leader>m
let g:WhichKeyDesc_multicursor = "<leader>m Multi-cursor"
let g:WhichKeyDesc_multicursor_all = "<leader>ma Select all occurrences"

" ============================================================================
" NOTES FOR NON-LEADER MAPPINGS
" ============================================================================
"
" These dont show in which-key popup but are documented here:
"
" NAVIGATION:
"   Ctrl+h/j/k/l     - Navigate between splits
"   Alt+j/k          - Move lines up/down
"   Ctrl+o/i         - Back/Forward in jump history
"   
" CODE NAVIGATION:
"   gd               - Go to declaration
"   gD               - Go to type declaration
"   gi               - Go to implementation
"   gr               - Find usages (references)
"   K                - Show documentation
"   Ctrl+k           - Show signature (parameter info)
"   ]d / [d          - Next/Previous error
"   ]m / [m          - Next/Previous method
"
" VISUAL MODE:
"   Ctrl+n           - Select next occurrence (multi-cursor)
"   Ctrl+p           - Unselect previous occurrence
"   < / >            - Indent left/right (keeps selection)
"
" SCROLLING:
"   Ctrl+d/u         - Scroll down/up (centered)
"   n / N            - Next/Previous search result (centered)
"
" LINE MOVEMENT:
"   H                - Go to start of line (^)
"   L                - Go to end of line ($)
"
" FOLDING:
"   zc               - Close fold
"   zo               - Open fold
"   za               - Toggle fold
"   zM               - Close all folds
"   zR               - Open all folds
"
" ============================================================================

" ============================================================================
" SECTION 5: Navigation Mappings
" ============================================================================

" Split windows
nmap <leader>wv :action SplitVertically<CR>
nmap <leader>ws :action SplitHorizontally<CR>
nmap <leader>wu :action Unsplit<CR>
nmap <leader>wm :action HideAllWindows<CR>

" Navigate between split windows easier
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" Tab navigation (buffers)
nmap <leader>bn :action NextTab<CR>
nmap <leader>bp :action PreviousTab<CR>
nmap <leader>bd :action CloseContent<CR>
nmap <leader>ba :action CloseAllEditorsButActive<CR>

" Move lines up/down with Alt+j/k (works in normal and visual mode)
nmap <A-j> :action MoveLineDown<CR>
nmap <A-k> :action MoveLineUp<CR>
vmap <A-j> :action MoveLineDown<CR>
vmap <A-k> :action MoveLineUp<CR>

" ============================================================================
" SECTION 6: File Navigation & Search Mappings
" ============================================================================

" <leader>f = "Find" related commands
nmap <leader>ff :action GotoFile<CR>              " files
nmap <leader>fg :action FindInPath<CR>            " grep
nmap <leader>fb :action RecentFiles<CR>           " buffers (recent)
nmap <leader>fs :action FileStructurePopup<CR>    " symbols
nmap <leader>fa :action SearchEverywhere<CR>      " all (everything)

" Toggle file Explorer
nmap <leader>e :action SelectInProjectView<CR>    " explorer

" ============================================================================
" SECTION 7: Code Navigation (LSP-like) Mapping
" ============================================================================

" Go to definition/references
nmap gd :action GotoDeclaration<CR>
nmap gD :action GotoTypeDeclaration<CR>
nmap gi :action GotoImplementation<CR>
nmap gr :action FindUsages<CR>
nmap K :action QuickJavaDoc<CR>     " hover documentation

" Navigate errors
nmap ]d :action GotoNextError<CR>
nmap [d :action GotoPreviousError<CR>

" Method navigation
nmap ]m :action MethodDown<CR>
nmap [m :action MethodUp<CR>

" Back and forward (between buffers)
nmap <C-o> :action Back<CR>
nmap <C-i> :action Forward<CR>

" Show signature
nmap <C-k> :action ParameterInfo<CR>
imap <C-k> <C-o>:action ParameterInfo<CR>

" ============================================================================
" SECTION 8: Code Actions & Refactoring
" ============================================================================

" Quick actions
nmap <leader>ca :action ShowIntentionActions<CR>    " code actions
vmap <leader>ca :action ShowIntentionActions<CR>    " code actions
nmap <leader>cr :action RenameElement<CR>           " rename
vmap <leader>cr :action RenameElement<CR>           " rename

" Formatting
nmap <leader>cf :action ReformatCode<CR>            " format
vmap <leader>cf :action ReformatCode<CR>            " format
nmap <leader>ci :action OptimizeImports<CR>

" Generate code
nmap <leader>cc :action Generate<CR>

" Comment/uncomment
nmap <leader>/ :action CommentByLineComment<CR>
vmap <leader>/ :action CommentByLineComment<CR>

" Refactoring
nmap <leader>rr :action Refactorings.QuickListPopupAction<CR>     " Refactor menu (all)
vmap <leader>rr :action Refactorings.QuickListPopupAction<CR>
nmap <leader>rm :action ExtractMethod<CR>                         " Extract method
vmap <leader>rm :action ExtractMethod<CR>
nmap <leader>rv :action IntroduceVariable<CR>                     " Extract variable
vmap <leader>rv :action IntroduceVariable<CR>

" ============================================================================
" SECTION 9: Running & Debugging
" ============================================================================

" Run
nmap <leader>xx :action Run<CR>                                   " Run
nmap <leader>xr :action ChooseRunConfiguration<CR>                " Run (choose)
nmap <leader>xs :action Stop<CR>                                  " Stop

" Debug
nmap <leader>dd :action Debug<CR>                                 " Debug
nmap <leader>db :action ToggleLineBreakpoint<CR>                  " Breakpoint
nmap <leader>ds :action Stop<CR>                                  " Stop

" Test
nmap <leader>xt :action RunClass<CR>                              " Test class
nmap <leader>xm :action RunCurrentTestMethod<CR>                  " Test method
nmap <leader>xf :action RerunFailedTests<CR>                      " Test failed

" ============================================================================
" SECTION 10: Tool Windows
" ============================================================================

nmap <leader>t :action ActivateTerminalToolWindow<CR>             " Terminal
nmap <leader>vd :action ActivateDatabaseToolWindow<CR>            " View database
nmap <leader>vg :action ActivateVersionControlToolWindow<CR>      " View git

" ============================================================================
" UTILITIES
" ============================================================================

" Zen Mode
nmap <leader>z :action ToggleDistractionFreeMode<CR>
nmap <leader>Z :action ToggleZenMode<CR>

" Insert blank lines
nmap <leader>ij o<Esc>
nmap <leader>ik O<Esc>

" Better indenting
vmap < <gv
vmap > >gv

" Keep cursor centered when scrolling (much more comfortable!)
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz

" Keep cursor centered when searching
nmap n nzzzv
nmap N Nzzzv

" Folding
nmap zc :action CollapseRegion<CR>
nmap zo :action ExpandRegion<CR>
nmap za :action ExpandCollapseToggleAction<CR>
nmap zM :action CollapseAllRegions<CR>
nmap zR :action ExpandAllRegions<CR>

" H goes to start of line, L goes to end
nmap H ^
nmap L $
vmap H ^
vmap L $

" Multiple cursors (IntelliJ Multi-caret)
vmap <C-n> :action SelectNextOccurrence<CR>
vmap <C-p> :action UnselectPreviousOccurrence<CR>
vmap <leader>ma :action SelectAllOccurrences<CR>
